// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tarkov.API.Database;

#nullable disable

namespace Tarkov.API.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250214120230_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tarkov.API.Database.Entities.AchievementEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<float>("AdjustedPlayersCompletedPercentage")
                        .HasColumnType("real");

                    b.Property<string>("DescriptionTranslationKey")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Hidden")
                        .HasColumnType("bit");

                    b.Property<string>("NameTranslationKey")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("PlayersCompletedPercentage")
                        .HasColumnType("real");

                    b.Property<string>("Rarity")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Side")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("DescriptionTranslationKey")
                        .IsUnique();

                    b.HasIndex("NameTranslationKey")
                        .IsUnique();

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("Tarkov.API.Database.Entities.TranslationEntity", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Language")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Key", "Language");

                    b.ToTable("Translations");
                });

            modelBuilder.Entity("Tarkov.API.Database.Entities.TranslationKeyEntity", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Key");

                    b.ToTable("TranslationKeys");
                });

            modelBuilder.Entity("Tarkov.API.Database.Entities.AchievementEntity", b =>
                {
                    b.HasOne("Tarkov.API.Database.Entities.TranslationKeyEntity", "DescriptionTranslationKeyEntity")
                        .WithOne("AchievementDescription")
                        .HasForeignKey("Tarkov.API.Database.Entities.AchievementEntity", "DescriptionTranslationKey")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Tarkov.API.Database.Entities.TranslationKeyEntity", "NameTranslationKeyEntity")
                        .WithOne("AchievementName")
                        .HasForeignKey("Tarkov.API.Database.Entities.AchievementEntity", "NameTranslationKey")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DescriptionTranslationKeyEntity");

                    b.Navigation("NameTranslationKeyEntity");
                });

            modelBuilder.Entity("Tarkov.API.Database.Entities.TranslationEntity", b =>
                {
                    b.HasOne("Tarkov.API.Database.Entities.TranslationKeyEntity", "KeyEntity")
                        .WithMany("Translations")
                        .HasForeignKey("Key")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("KeyEntity");
                });

            modelBuilder.Entity("Tarkov.API.Database.Entities.TranslationKeyEntity", b =>
                {
                    b.Navigation("AchievementDescription");

                    b.Navigation("AchievementName");

                    b.Navigation("Translations");
                });
#pragma warning restore 612, 618
        }
    }
}
